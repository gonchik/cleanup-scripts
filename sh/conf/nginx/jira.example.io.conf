server {
    listen       80;
    server_name  jira.example.io;
    access_log  off;
    return 301 https://$server_name$request_uri;
}

server {
    listen       443 default ssl;
    http2	 on;
    server_name  jira.example.io;

    #access_log  /var/log/nginx/debug.log custom;
    ssl_certificate     /etc/nginx/ssl/wildcars.full.crt;
    ssl_certificate_key /etc/nginx/ssl/key.pem;

    if ($host = 'sd.example.io') {
	return 301 https://jira.example.io/servicedesk/customer/portals;
    }
    proxy_ignore_client_abort on;

    location / {
            client_max_body_size 35M;
            client_body_buffer_size 512k;
	    proxy_read_timeout 1200;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-Host $host;
	    proxy_set_header X-Forwarded-Server $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://jira;
    }

    #location /eazybi/ {
    #	proxy_set_header Host $host;
    #	proxy_set_header X-Real-IP $remote_addr;
    #	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #	proxy_set_header X-Forwarded-Proto $scheme;
    #	proxy_http_version 1.1;
    #  	proxy_pass http://jira_tech;
    #}

    location	/s/	{
		proxy_hide_header Cache-Control;
		proxy_ignore_headers	Set-Cookie;
		proxy_hide_header	Set-Cookie;
		proxy_hide_header	Etag;
		add_header		X-Proxy-Cache	$upstream_cache_status;
		etag			off;
		ssi			off;
		proxy_http_version	1.1;
		proxy_cache		jira_cache;
		proxy_set_header	Connection	"";
		expires			8h;
		proxy_cache_valid	200	302	304	8h;
		proxy_cache_valid	400	401	403	404	405	406	408	500	501	502	503	504	505	1s;
		proxy_cache_min_uses	1;
		proxy_pass		http://jira;
	}


	location  /static-assets/     {
                proxy_ignore_headers    Set-Cookie;
                proxy_hide_header       Set-Cookie;
                proxy_hide_header       Etag;
                add_header      	X-Proxy-Cache   $upstream_cache_status;
                etag    		off;
                ssi     		off;
                proxy_http_version      1.1;
                proxy_cache     	jira_cache;
                proxy_set_header        Connection      "";
                expires 		8h;
                proxy_cache_valid       200     302     304     8h;
                proxy_cache_valid       400     401     403     404     405     406     408     500     501     502     503     504     505     1s;
                proxy_cache_min_uses    1;
                proxy_pass      	http://jira;
        }

	location	/images/	{
		expires			1h;
		proxy_redirect		off;
		add_header		X-Proxy-Cache	$upstream_cache_status;
		proxy_ignore_headers	Set-Cookie;
		proxy_hide_header	Set-Cookie;
		#etag	off;
		ssi			off;
		proxy_http_version	1.1;
		proxy_cache_revalidate	on;
		proxy_intercept_errors	on;
		proxy_set_header	Connection	"";
		proxy_cache		jira_cache;
		proxy_cache_valid	200	304 12h;
		proxy_cache_valid	403	503 15s;
		proxy_pass		http://jira;
	}

	location	/download/resources/	{
		expires			1h;
		add_header		X-Proxy-Cache	$upstream_cache_status;
		proxy_ignore_headers	Set-Cookie;
		proxy_hide_header	Set-Cookie;
		etag			off;
		ssi			off;
		proxy_http_version	1.1;
		proxy_cache_revalidate	on;
		proxy_intercept_errors	on;
		proxy_set_header	Connection	"";
		proxy_cache		jira_cache;
		proxy_cache_valid	200	304 12h;
		proxy_cache_valid	403	503 10s;
		proxy_pass		http://jira;
	}
     location = /robots.txt {
       		add_header Content-Type text/plain;
       		return 200 "User-agent: *\nDisallow: /\n";
       }


    location /network {
    	root /var/www/html/;
    }

    location /banner {
        root /var/www/html/;
    }


    location /glowroot {
       proxy_pass http://jira.example.io:4000;
    }

    location = /nginx_status {
       stub_status;
    }

    location /jsnlog.logger {
	return 200;
    }

   location /rest/analytics/1.0/publish/bulk {
   	return 200;
   }
   if ($http_user_agent = "Mozilla/5.0 (compatible; Nmap Scripting Engine; https://nmap.org/book/nse.html)") {
        return 403;
   }

}